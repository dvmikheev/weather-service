<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.cloudator.weather</groupId>
	<artifactId>weather-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>weather-service</name>
	<description>Service that monitors weather forecasts</description>

	<properties>
		<java.version>11</java.version>
		<kotlin.version>1.4.10</kotlin.version>
		<kotlin.compiler.jvmTarget>11</kotlin.compiler.jvmTarget>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.ninja-squad</groupId>
			<artifactId>springmockk</artifactId>
			<version>2.0.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>all-open</plugin>
						<plugin>spring</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>4.2.3</version>
				<executions>
					<execution>
						<id>forecast-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/swagger_openweathermap.yaml</inputSpec>
							<!-- target to generate kotlin server code -->
							<generatorName>kotlin-spring</generatorName>
							<generateApis>false</generateApis>
							<generateSupportingFiles>false</generateSupportingFiles>
							<modelPackage>com.cloudator.weather.forecast.model.consumer</modelPackage>
							<configOptions>
								<useBeanValidation>true</useBeanValidation>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>weather-service</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/swagger.yaml</inputSpec>
							<!-- target to generate kotlin server code -->
							<generatorName>kotlin-spring</generatorName>
							<generateApis>false</generateApis>
							<generateSupportingFiles>false</generateSupportingFiles>
							<modelPackage>com.cloudator.weather.forecast.model.producer</modelPackage>
							<configOptions>
								<useBeanValidation>true</useBeanValidation>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/openapi</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>codeChecks</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.ozsie</groupId>
						<artifactId>detekt-maven-plugin</artifactId>
						<version>1.14.0</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<config>detekt.yml</config>
									<report>
										<report>txt:reports/detekt.txt</report>
										<report>xml:reports/detekt.xml</report>
									</report>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<version>4.1.3</version>

						<executions>
							<execution>
								<id>security-scan-kotlin</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>

						<configuration>
							<xmlOutput>true</xmlOutput>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<includeFilterFile>spotbugs-security-include.xml</includeFilterFile>
							<excludeFilterFile>spotbugs-security-exclude.xml</excludeFilterFile>
							<plugins>
								<plugin>
									<groupId>com.h3xstream.findsecbugs</groupId>
									<artifactId>findsecbugs-plugin</artifactId>
									<version>LATEST</version> <!-- Auto-update to the latest stable -->
								</plugin>
							</plugins>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>ktlint</id>
								<phase>verify</phase>
								<configuration>
									<target name="ktlint">
										<java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
											  classname="com.pinterest.ktlint.Main"
											  classpathref="maven.plugin.classpath">
											<arg value="src/**/*.kt"/>
											<arg value="--reporter=plain"/>
											<arg
													value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/>
											<!-- see https://github.com/pinterest/ktlint#usage for more -->
										</java>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>ktlint-format</id>
								<configuration>
									<target name="ktlint">
										<java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
											  classname="com.pinterest.ktlint.Main"
											  classpathref="maven.plugin.classpath">
											<arg value="-F"/>
											<arg value="src/**/*.kt"/>
										</java>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.pinterest</groupId>
								<artifactId>ktlint</artifactId>
								<version>0.39.0</version>
							</dependency>
							<!-- additional 3rd party ruleset(s) can be specified here -->
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
